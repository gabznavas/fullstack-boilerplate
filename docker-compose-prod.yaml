services:
  redis:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "6379:6379"
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: postgres-database
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - app-network

    volumes:
      - ./database/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/postgres/db_data:/var/lib/postgresql/data

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: gabrielnavas/aws-api:v1.0.0
    container_name: aws-api
    environment:
      GIN_MODE: release
      REDIS_URI: redis:6379
      POSTGRES_URI: postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
      WEB_URI: https://localhost
    networks:
      - app-network
    depends_on:
      - redis
      - postgres

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: https://localhost/api
    image: gabrielnavas/aws-web:v1.0.0
    container_name: aws-web
    environment:
      NEXT_PUBLIC_API_URL: https://localhost/api
    networks:
      - app-network
    depends_on:
      - api

  reverse-proxy:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/nginx/certs:/etc/nginx/certs:ro
    networks:
      - app-network
    depends_on:
      - web
      - api

networks:
  app-network:
    driver: bridge
